%%%%% Kódolási konvekciók
Mire valók a kódolási konvenciók?
	együtt dolgozó fejlesztők hasonló formátumú kódot írjanak
Hogyan nevezzük el az osztályokat, attribútumokat és metódusokat?
	osztály: nagy kezdőbetű
	konstruktor: ugyanaz a név
	attributum, metódus: kis kezdőbetű, szavak határán nagy betűszavaknál
	-> ne legyen ékezetes karakter
	-> ne egyezzen kulcsszóval (pl while, do for, if)
	-> ne legyen összekeverhető (pl string, integer)
	
Mire figyeljünk a betűszavaknál?
	összetétel határán nagybetű
	mozaikszó: első nagy, utána kicsi
Milyen sorrendben következzenek egy osztályon belül a különböző tagok?
	attributum, konstruktor, metódus
Milyen típusú megjegyzések vannak Java nyelvben?
	sor: //
	több sor: /*    */
	javadoc: /**    */
%%%%% literálok és lokális változók %%%%%%
Mire valók a literálok?
	önmagukban is van jelentése, ezekhez mindig implicit módon társul egy adattípus
	nem nekünk kell megadni, hanem a “háttérben”, közvetetten történik meg
Milyen literálokat ismersz és hogyan deklarálod őket?
	logikai 	boolean
	integer		egész szám
	double 		lebegőpontos szám
A hol definiált változókat nevezzük lokális változóknak?
	metóduson belül 
Szükséges-e típust definiálni? Milyen típusokat különböztetünk meg?
	igen
	int, double, booelean, string 
Mi a lokális változó láthatósága?
	deklarálástól az adott blokk végéig lehet használni
Mi a kezdőértéke egy lokális változónak?
	nincs automatikus kezdőértékük, ezért használatuk előtt mindig nekünk kell ezt megadni
Mi az a szemétgyűjtő mechanizmus?
	Egy objektum a létrehozásától (konstruktor hívása) addig létezik, amíg használjuk.
	JVM automatikusan figyeli, meddig használjuk. Ezután a memóriából kitörli a nem használt objektumokat, ezáltal helyet szabadítva fel
	
%%%%% KIfejezések és utasítások %%%%%%%
Mire valók a kifejezések?
	operátorok és operandusok kombinációja, tipikusan egy érték kiszámítására 
Írj fel néhány kifejezést!
	boolean eq = 5 == 10;
	int i = 2 + 3 * 5;
	String name = trainer.getName();
Milyen operátorokat ismersz?
	matematikai			+,-,/,*,%
	logikai 			!, &, | && || 
	összehasonlító 		< > == 
	példányosítás: 		new
	értékadó: 			= 
	léptető: 			++, --
	összevont: 			+=, -=,  *=, /=, %=
	három operandusú 	? : 
	
Java nyelven milyen utasításokat ismersz?	
	változó deklaráció
	értékadás
	példányosítás
	metódushívás
%%%%%% csomagok  %%%%%
Mire használatosak a Java csomagok?
	struktúrát ad a projektnek
	névütközés feloldása 
	láthatóság szabályozása
Mi a csomag fizikai fájlrendszerbeli megfelelője?
	könyvtárak
Hogyan hozunk létre új csomagokat?
	package kulcsszóval
	domain név fordítva 
Hogyan használunk más csomagban lévő osztályokat?
	. -al elválasztva, pl java.util
Hogyan kezeljük a névütközést?
	egyik importálása, másik minősített névvel
	mindkettő minősített névvel 
	
%%%%      API     %%%%%%
Mi az az osztálykönyvtár?
	osztályok és típusok összessége
Hogyan van az osztálykönyvtár szervezve?
	csomagokba szervezve
Hogyan kell elemeket felhasználni az osztálykönyvtárból?
	
Milyen esetekben nem kell import kulcsszót használni?
	java.lang
Hol található az osztálykönyvtár dokumentációja?
	https://docs.oracle.com/javase/8/docs/api/ 
	JDK telepítési könyvtárában: lib\src.zip
	
%%%% JAR állomány 
Mire valók a JAR állományok?
	a lefordított class fájlokat és az alkalmazáshoz tartozó egyéb erőforrás állományokat tartalmazza ZIP formátumba összecsomagolva
Hogyan épülnek fel a JAR állományok?
	futtatáshoz szükséges információkat JAR állományon belül a META-INF/MANIFEST.MF fájl tartalmazza
	pom.xml - main() fájl negadható
Hogyan lehet futtatni egy JAR állományban lévő osztályban található main() metódust?
	pom.xml - main() fájl megadása 
	<configuration>
                <archive>
                    <manifest>
                        <mainClass>distjar.HelloWorld</mainClass>
                    </manifest>
                </archive>
            </configuration>
			
Hogyan lehet futtathatóvá tenni egy JAR állományt?
	 futtatáshoz szükséges információkat JAR állományon belül a META-INF/MANIFEST.MF fájl tartalmazza. Ebben az esetben az alkalmazás a -jar kapcsolóval indítható.

	java -jar target\distjar-1.0-SNAPSHOT.jar
	
	 kitömörítés:  jar xvf distjar-1.0-SNAPSHOT.jar
	 
	 
%%%%%% Szöveg típus   %%%%
Milyen típus a String?
	szöveg
Hogyan definiálható String literál?
	String valami = "blabla";
Hogyan lehet két String-et összekapcsolni?
	+ jellel, pl "John"+"Smith"
Hogyan lehet egy String-et és egy primitív típust összekapcsolni?
	+ jellel, de a sorrend számít 
	"John"+4+4 -> John44
	4+4+"John" -> 8John
Hogyan lehet két String-et összehasonlítani?
	String.equals(), 
	pl. "abc".equals("abs")  -> true

%%%% sortörés   %%%%
Mit jelent az a fogalom, hogy “sortörés karakter”?
	új sorban kezdődik utána a szöveg
Hogyan használjuk különböző operációs rendszerek esetében?
	Windows: CarriageReturns (kocsiVissza) \r + LineFeed (soremelés) \n  2bájt 
	Linux:  LineFeed (soremelés) \n  1bájt 
	metódus lehívása: System.lineSeparator()	
Hogyan használjuk Javaban?
	 "John Doe\n" + "Jack Doe\n" +
Miben különbözik a System.out.println() és a System.out.print() metódus működése?
	System.out.println() a szöveg után rak sörtörést automatikusan
	System.out.print() ugyanonnan folytatja
Hányféle módon érhetjük el, hogy sortörés legyen egy kiírandó szövegben?
	1) külön System.out.println() -na rakjuk
	2) \r\n a szövegek közé 	"John\r\nDoe"
	3) csak\n a szövegek közé "John\nDoe"
	4) konkatenálással: "John" + "\n" + "Doe"	
	5) line spearator lekérése ("John" + System.lineSeparator() + "Doe"	
Hogyan adhatunk meg Javaban sortörést operációs rendszer függetlenül?
	line spearator lekérésével: 
	System.lineSeparator()
Milyen módokon tárolhatunk hosszú Stringeket?
	 több sorban leírva és konkatenálva az egyes részeit
	 pl: String names = "John Doe\n" +
               "Jack Doe\n" +
               "Jane Doe\n";
			   
%%% Dátum és időkezelés 
Mit tárol a LocalDateTime objektum?
	- dátumot és időpontot ezred másodperc pontosan
Hogyan lehet egy LocalDate vagy LocalDateTime objektumot létrehozni?
		of kulcsszóval a new helyett 
	- LocalDate from = LocalDateof(2020,10,23);
	- LocalDateTime start = LocalDateTime(2020,Month.OCTOBER,10,12,30);
	- LocalDateTime now = LocalDateTime.now();
	
Mire való a statikus now() metódus?
	- az aktuális, processzoridőnek megfelelő idő definiálására
Milyen pontossággal lehet az időt megadni?
	- ezred másodperc 