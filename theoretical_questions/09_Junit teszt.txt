//// 1) Unit tesztelés JUnit 4 használatával   ////
Mire való a JUnit keretrendszer?
	egységek (osztályok) tesztelésére 
Tipikusan hogyan épül fel egy teszteset?
	Given: adott állapot 
	When	meghívunk rajta egy metódust 
	Then 	az történik-e amit vártunk (pl objektrumállapota, visszatérési értékek)
Hogyan támogatja a JUnit-ot a Maven?
	Mavenben a tesztek az src/test/java mappában találhatóak, ezen belül pedig a tesztelendő osztálynak megfelelő csomagban
Hogyan támogatja a JUnit-ot az IDE?

Példa teszt: 
import org.junit.Test;
import static org.hamcrest.CoreMatchers.equalTo;
import static org.junit.Assert.assertThat;

public class TrainerTest {
    @Test
    public void testCreate() {
        //Given
        Trainer trainer = new Trainer("John Doe");

        //When
        String name = trainer.getName();

        //Then
       assertThat(name, equalTo("John Doe"));

    }
}
<scope>compile </scope>			ez volt a pom.xml

///2  Junit 5 ///
Mik a tesztosztályokra vonatkozó megkötések és a konvenciók?
	Maven src/test/csomagnév/hasonló név 
Milyen annotációt szükséges a tesztesetekre tenni és miért?
	@Test org.junit.jupiter/api csomagból 
Mi a neve annak a metódusnak, amellyel az egyezést vizsgáljuk?
	assertXXX 
	assertEquals
Milyen két paramétert kell, hogy kapjon ez a metódus?
	először elvárt, majd aktuális érték 
/// 3 Junit 5 metódusai   /////
Sorold föl a JUnit különböző assert metódusait és azt, hogy melyik mire használható!
	assertEquals() - Primitívek esetén ez az értéküket hasonlítja össze, objektumok esetén pedig az állapotukat.
	assertNull() és assertNotNull() - Azt vizsgálja, hogy a paraméterként átadott változó értéke null-e vagy sem.
	assertNotEquals() - Az assertEquals() ellentéte, a paraméterként átadott két érték különbözőségét vizsgálja.
	assertSame() és assertNotSame() - Az objektumok referenciáját hasonlítja össze, vagyis azt vizsgálja, hogy két változó ugyanarra az objektumra mutat-e.
	assertTrue() és assertFalse() - Ezeknek a metódusoknak egy logikai értéket kell átadni, és ha az igaz (true) vagy hamis (false), akkor a teszteset sikeresen lefut. Helyettük érdemes az assertEquals()-t használni, ugyanis sokkal olvashatóbb lesz azzal a teszteset.
	assertArrayEquals() - Tömbök összehasonlítására. A paraméterként átadott két tömb elemeit egyenként hasonlítja össze, és csak pontos egyezés esetén fut le sikeresen a teszteset.
Melyik a JUnit leggyakrabban használt assert metódusa?
	assertEquals
Melyik a JUnit null értékek vizsgálatára használható metódusa?
	assertNull assertNotNull
Melyik a JUnit azon metódusa, amely két érték különbözőségét vizsgálja?
	assertNotEquals
Melyek a JUnit azon metódusai, amelyek minden esetben az objektumok referenciáját hasonlítják össze?
	assertSame
Melyek a JUnit logikai értékek vizsgálatára használható metódusai?
	assertTrue, assertFalse
A JUnit melyik metódusa használható tömbök összehasonlítására?
	assertArrayEquals
Miért van az assertEquals() metódusnak egy három paraméteres változata is?
	lebegőpontos számok összehasonlítására 
	
/// 4 TESZTESETEK ÉLETCIKLUSA ////	
Milyen lehetőségünk van, ha egy tesztosztályban bizonyos kódrészletek sokszor ismétlődnek?
	@beforeEach , @aftereach
Milyen sorrendben futtatja a JUnit az egyes tesztmetódusokat?
	először a beforeEacg, utána a tesztmetódus, végül az aftereach 